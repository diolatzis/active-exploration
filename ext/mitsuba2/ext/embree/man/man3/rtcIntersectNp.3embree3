.\" Automatically generated by Pandoc 1.17.0.3
.\"
.TH "rtcIntersectNp" "3" "" "" "Embree Ray Tracing Kernels 3"
.hy
.SS NAME
.IP
.nf
\f[C]
rtcIntersectNp\ \-\ finds\ the\ closest\ hits\ for\ a\ SOA\ ray\ stream\ of
\ \ size\ N
\f[]
.fi
.SS SYNOPSIS
.IP
.nf
\f[C]
#include\ <embree3/rtcore.h>

void\ rtcIntersectNp(
\ \ RTCScene\ scene,
\ \ struct\ RTCIntersectContext*\ context,
\ \ struct\ RTCRayHitNp*\ rayhit,
\ \ unsigned\ int\ N
);
\f[]
.fi
.SS DESCRIPTION
.PP
The \f[C]rtcIntersectNp\f[] function finds the closest hits for a SOA
ray stream (\f[C]rays\f[] argument) of size \f[C]N\f[] (basically a
large ray packet) with the scene (\f[C]scene\f[] argument).
The \f[C]rayhit\f[] argument points to two structures of pointers with
one pointer for each ray and hit component.
Each of these pointers points to an array with the ray or hit component
data for each ray or hit.
This way the individual components of the SOA ray stream do not need to
be stored sequentially in memory, which makes it possible to have large
varying size ray packets in SOA layout.
See Section [rtcIntersect1] for a description of how to set up and trace
rays.
.IP
.nf
\f[C]
\f[]
.fi
.IP
.nf
\f[C]
\f[]
.fi
.PP
A ray in a ray stream is considered inactive if its \f[C]tnear\f[] value
is larger than its \f[C]tfar\f[] value.
.PP
The stream size \f[C]N\f[] can be an arbitrary positive integer
including 0.
Each ray component array must be aligned to 16 bytes.
.SS EXIT STATUS
.PP
For performance reasons this function does not do any error checks, thus
will not set any error flags on failure.
.SS SEE ALSO
.PP
[rtcOccludedNp]
